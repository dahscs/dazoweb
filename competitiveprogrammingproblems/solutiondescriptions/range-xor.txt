Pre-requisite: Fenwick Tree. This problem utilizes the inverse property of xor. Every number is it's own inverse in xor. A^A=0. With this knowledge in mind, we can simply create a fenwick tree which utilizes xor instead of addition. Rant: I recommend learning a bit more about xor in relation to competitive programming yourself. The xor identity = 0; A^0=A. Xor is commutative and associative. In cryptography one of the simplest encryption methods is an xor-cipher. You can encrypt data D by xor-ing it with a key K. When you want to decrypt you can xor the encrypted data with K again. Xor-ing the encrypted data with the unencrypted data will give you the key.
