If we represent every single spot and orientation as a node in a graph we will quickly notice that every node will have exactly one out edge. This means that starting at any node and traversing it's out edges will eventually result in a cycle. A node will always either be part of a cycle, or lead into a cycle. All we need to do is find the biggest tail-length + cycle-length combination. We can come up with multiple algorithms to do this, but we must be careful not to revisit paths as this will give us a TLE. The time complexity depends on your algorithm, but intended time complexity is O(4*N^2). I recommend again trying the problem with this new information before reading the solution code.
